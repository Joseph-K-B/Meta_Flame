/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react';
import * as THREE from 'three';

import { useGLTF } from '@react-three/drei';
import { useFrame, useLoader, useThree } from '@react-three/fiber';
import { useStore } from '../../../hooks/useStand';

export default function Desk({ ...props }) {
  const page = useStore((state) => state.page);
  const forward = useStore((state) => state.forward);
  
  const [toggle, setToggle] = useState(false)

  const group = useRef();

  const { camera } = useThree();
  const { nodes, materials } = useGLTF('/desk/desk.glb');

  const texture = useLoader(THREE.TextureLoader, '/desk/bakin.jpg');
  texture.flipY = false;

  const vec = new THREE.Vector3();
  const vecTwo = new THREE.Vector3();

  useFrame(() => {
    const deskPosition = group.current.position;
    const step = 0.05
    if(page === 0) {
      vec.set(0, 3.0616997, 5);
      vecTwo.set(0, -17, 0);
      camera.position.lerp(vec, step / 2);
      deskPosition.lerp(vecTwo, step * 2)
    }
    if(page === 1) {
      vec.set(0, -1.5, -1)
      deskPosition.lerp(vec, step)
    }
    if(page === 2) {
      vec.set(5, 10, 5)
      camera.position.lerp(vec, step)
    }
    if(page === 3) {
      vec.set(0, 0, -5)
      camera.position.lerp(vec, step)
    }
    if(page === 4) {
      vec.set(-0.75, 0.5, -2.25)
      camera.position.lerp(vec, step)
    }
    if(page === 5) {
      vec.set(0, 3, -5);
      vecTwo.set(0, -15, 0);
      camera.position.lerp(vec, step);
      deskPosition.lerp(vecTwo, step / 2)
    }
    if(!forward && page === 4) {
      vec.set(0, -1.5, -1);
      deskPosition.lerp(vec, step);
    }
    toggle ? group.current.rotation.set(0, -Math.PI / 6, 0) & camera.position.set(0, 0.5, -2.45) : null
  });

  return (
    <group 
      ref={group}
      scale={0.25}
      dispose={null}
    >
      <gridHelper />
      <mesh
        onClick={() => setToggle(!toggle)} 
        geometry={nodes.Cube.geometry} 
        // material={nodes.Cube.material} 
        position={[2.31, 3.74, 2.87]} 
        rotation={[-Math.PI, -0.64, -Math.PI]} 
        scale={[3.38, 0.29, 2.03]} 
      >
        <meshBasicMaterial 
          map={texture}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('/desk/desk.glb');
